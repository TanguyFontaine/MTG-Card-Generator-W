{"ast":null,"code":"import _objectSpread from\"C:/Visual Studio Projects/card-generator-tanguy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{Input as ChakraTextbox}from\"@chakra-ui/react\";/***************************************************************/import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export function Textbox(props){//let value = props.value       TODO check why we should pass the value until here only to set value={value}.\nvar setValue=props.setValue;var handleInputChange=function handleInputChange(e){var inputValue=e.target.value;setValue(inputValue);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(ChakraTextbox//value={value}             TODO check what it does.\n,_objectSpread({onChange:handleInputChange,size:\"sm\"},props))});}","map":{"version":3,"sources":["C:/Visual Studio Projects/card-generator-tanguy/src/style_components/textbox.jsx"],"names":["React","Input","ChakraTextbox","Textbox","props","setValue","handleInputChange","e","inputValue","target","value"],"mappings":"qKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAK,GAAIC,CAAAA,aAAlB,KAAuC,kBAAvC,CACA,iE,gGAEA,MAAO,SAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CAC3B;AACA,GAAIC,CAAAA,QAAQ,CAAGD,KAAK,CAACC,QAArB,CAEA,GAAIC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,CAAD,CAAO,CAC7B,GAAIC,CAAAA,UAAU,CAAGD,CAAC,CAACE,MAAF,CAASC,KAA1B,CACAL,QAAQ,CAACG,UAAD,CAAR,CACD,CAHD,CAKA,mBACA,sCACE,KAAC,aACC;AADF,gBAEE,QAAQ,CAAEF,iBAFZ,CAGE,IAAI,CAAC,IAHP,EAIMF,KAJN,EADF,EADA,CAUH","sourcesContent":["import React from 'react';\r\nimport { Input as ChakraTextbox}  from \"@chakra-ui/react\"\r\n/***************************************************************/\r\n\r\nexport function Textbox(props) {\r\n    //let value = props.value       TODO check why we should pass the value until here only to set value={value}.\r\n    let setValue = props.setValue\r\n\r\n    let handleInputChange = (e) => {\r\n      let inputValue = e.target.value\r\n      setValue(inputValue)\r\n    }\r\n\r\n    return (\r\n    <>\r\n      <ChakraTextbox \r\n        //value={value}             TODO check what it does.\r\n        onChange={handleInputChange}\r\n        size=\"sm\"\r\n        {...props}\r\n      />\r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}