{"ast":null,"code":"var _jsxFileName = \"C:\\\\Visual Studio Projects\\\\card-generator-tanguy\\\\src\\\\style_compomemts\\\\textbox.jsx\";\nimport React, { useState } from 'react';\nimport { Input as ChakraTextbox, Text } from \"@chakra-ui/react\";\n/***************************************************************/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Textbox(props) {\n  let value = props.value;\n  let setValue = props.setValue;\n\n  let handleInputChange = e => {\n    let inputValue = e.target.value;\n    setValue(inputValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ChakraTextbox, {\n      value: value,\n      onChange: handleInputChange,\n      size: \"sm\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Textbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Textbox\");","map":{"version":3,"sources":["C:/Visual Studio Projects/card-generator-tanguy/src/style_compomemts/textbox.jsx"],"names":["React","useState","Input","ChakraTextbox","Text","Textbox","props","value","setValue","handleInputChange","e","inputValue","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAK,IAAIC,aAAlB,EAAiCC,IAAjC,QAA6C,kBAA7C;AAEA;;;;AACA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAC3B,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AACA,MAAIC,QAAQ,GAAGF,KAAK,CAACE,QAArB;;AAEA,MAAIC,iBAAiB,GAAIC,CAAD,IAAO;AAC7B,QAAIC,UAAU,GAAGD,CAAC,CAACE,MAAF,CAASL,KAA1B;AACAC,IAAAA,QAAQ,CAACG,UAAD,CAAR;AACD,GAHD;;AAKA,sBACA;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,KAAK,EAAEJ,KADT;AAEE,MAAA,QAAQ,EAAEE,iBAFZ;AAGE,MAAA,IAAI,EAAC,IAHP;AAAA,SAIMH;AAJN;AAAA;AAAA;AAAA;AAAA;AADF,mBADA;AAUH;KAnBeD,O","sourcesContent":["import React, { useState } from 'react';\r\nimport { Input as ChakraTextbox, Text}  from \"@chakra-ui/react\"\r\n\r\n/***************************************************************/\r\nexport function Textbox(props) {\r\n    let value = props.value\r\n    let setValue = props.setValue\r\n\r\n    let handleInputChange = (e) => {\r\n      let inputValue = e.target.value\r\n      setValue(inputValue)\r\n    }\r\n\r\n    return (\r\n    <>\r\n      <ChakraTextbox\r\n        value={value}\r\n        onChange={handleInputChange}\r\n        size=\"sm\"\r\n        {...props}\r\n      />\r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}