{"ast":null,"code":"var _jsxFileName = \"C:\\\\Visual Studio Projects\\\\card-generator-tanguy\\\\src\\\\components\\\\ui_panel.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box, Grid, VStack, useStyleConfig } from \"@chakra-ui/react\";\n/***************************************************************/\n\nimport { ImageSelector } from \"./image_selector\";\nimport { CardName } from \"./card_name\";\nimport { TypesSelection } from \"./types_selection\";\nimport { SuperTypesSelection } from \"./super_types_selection\";\nimport { SubTypes } from \"./sub_types\";\nimport { ManaCost } from \"./mana_cost\";\nimport { CardFrameSelection } from \"./card_frame_selection\";\nimport { SpellDescription } from \"./spell_description\";\nimport { FlavorText } from \"./flavor_text\";\nimport { PowerToughness } from \"./power_and_toughness\";\nimport { DownloadCardButton } from \"./download_card_button\";\nimport toImg from 'react-svg-to-image';\n/***************************************************************/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UiPanel(props) {\n  _s();\n\n  const style = useStyleConfig(\"UiPanel\");\n  const newImgggg = \"\";\n  const mana = props.manaCost;\n  const test = toImg(mana, \"zefzef\", {\n    scale: 3,\n    format: 'webp',\n    quality: 0.01,\n    download: false,\n    ignore: '.ignored'\n  }).then(fileData => {\n    newImgggg = fileData;\n  }); //<Loyalty setLoyalty={props.setLoyalty}/>\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    __css: style,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      mt: \"3%\",\n      mx: \"5%\",\n      gap: \"1.5em\",\n      children: [/*#__PURE__*/_jsxDEV(CardName, {\n        setCardName: props.setCardName,\n        setNameFontSize: props.setNameFontSize,\n        nameFontSize: props.nameFontSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TypesSelection, {\n        setTypes: props.setTypes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SuperTypesSelection, {\n        setSuperTypes: props.setSuperTypes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SubTypes, {\n        setSubTypes: props.setSubTypes,\n        setTypesFontSize: props.setTypesFontSize,\n        typesFontSize: props.typesFontSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ManaCost, {\n        setManaCost: props.setManaCost,\n        manaCost: props.manaCost,\n        setColorlessManaAmount: props.setColorlessManaAmount,\n        colorlessManaAmount: props.colorlessManaAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardFrameSelection, {\n        setCardFrame: props.setCardFrame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SpellDescription, {\n        setSpellDescription: props.setSpellDescription,\n        spellDescription: props.spellDescription,\n        setSpellFontSize: props.setSpellFontSize,\n        spellFontSize: props.spellFontSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FlavorText, {\n        setFlavorText: props.setFlavorText,\n        setFlavorTextFontSize: props.setFlavorTextFontSize,\n        flavorTextFontSize: props.flavorTextFontSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PowerToughness, {\n        setPower: props.setPower,\n        setToughness: props.setToughness,\n        setPTFontSize: props.setPTFontSize,\n        ptFontSize: props.ptFontSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImageSelector, {\n        setImageFileFunction: props.setImageFileFunction,\n        selectedImageFileName: props.selectedImageFileName,\n        setImageCentering: props.setImageCentering\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DownloadCardButton, {\n        left: 330,\n        takeCardScreenshot: props.takeCardScreenshot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: toImg(mana, \"zefzef\"),\n        alt: 'Screenshot'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UiPanel, \"pl7GAhqelQYC2Y8gxFE2LPD7C/o=\", false, function () {\n  return [useStyleConfig];\n});\n\n_c = UiPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"UiPanel\");","map":{"version":3,"sources":["C:/Visual Studio Projects/card-generator-tanguy/src/components/ui_panel.jsx"],"names":["React","Box","Grid","VStack","useStyleConfig","ImageSelector","CardName","TypesSelection","SuperTypesSelection","SubTypes","ManaCost","CardFrameSelection","SpellDescription","FlavorText","PowerToughness","DownloadCardButton","toImg","UiPanel","props","style","newImgggg","mana","manaCost","test","scale","format","quality","download","ignore","then","fileData","setCardName","setNameFontSize","nameFontSize","setTypes","setSuperTypes","setSubTypes","setTypesFontSize","typesFontSize","setManaCost","setColorlessManaAmount","colorlessManaAmount","setCardFrame","setSpellDescription","spellDescription","setSpellFontSize","spellFontSize","setFlavorText","setFlavorTextFontSize","flavorTextFontSize","setPower","setToughness","setPTFontSize","ptFontSize","setImageFileFunction","selectedImageFileName","setImageCentering","takeCardScreenshot"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Box, Grid, VStack, useStyleConfig } from \"@chakra-ui/react\"\r\n/***************************************************************/\r\n\r\nimport { ImageSelector } from \"./image_selector\"\r\nimport { CardName } from \"./card_name\"\r\nimport { TypesSelection } from \"./types_selection\"\r\nimport { SuperTypesSelection } from \"./super_types_selection\"\r\nimport { SubTypes } from \"./sub_types\"\r\nimport { ManaCost } from \"./mana_cost\"\r\nimport { CardFrameSelection } from \"./card_frame_selection\"\r\nimport { SpellDescription } from \"./spell_description\"\r\nimport { FlavorText } from \"./flavor_text\"\r\nimport { PowerToughness } from \"./power_and_toughness\"\r\nimport { DownloadCardButton } from \"./download_card_button\"\r\n\r\nimport toImg from 'react-svg-to-image';\r\n\r\n/***************************************************************/\r\n\r\nexport function UiPanel(props) {\r\n\r\n    const style = useStyleConfig(\"UiPanel\")\r\n\r\n    const newImgggg = \"\";\r\n    const mana = props.manaCost\r\n    const test = toImg(mana, \"zefzef\", {\r\n        scale: 3,\r\n        format: 'webp',\r\n        quality: 0.01,\r\n        download: false,\r\n        ignore: '.ignored'\r\n      }).then(fileData => {\r\n        newImgggg = fileData\r\n      });\r\n\r\n    //<Loyalty setLoyalty={props.setLoyalty}/>\r\n\r\n    return (\r\n        <Box __css={style} >\r\n            <Grid mt=\"3%\" mx=\"5%\" gap=\"1.5em\">\r\n                <CardName  setCardName={props.setCardName} setNameFontSize={props.setNameFontSize} nameFontSize={props.nameFontSize}/>\r\n                <TypesSelection setTypes={props.setTypes}/>\r\n                <SuperTypesSelection setSuperTypes={props.setSuperTypes}/>\r\n                <SubTypes setSubTypes={props.setSubTypes} setTypesFontSize={props.setTypesFontSize} typesFontSize={props.typesFontSize}/>\r\n                <ManaCost setManaCost={props.setManaCost} manaCost={props.manaCost} \r\n                          setColorlessManaAmount={props.setColorlessManaAmount} colorlessManaAmount={props.colorlessManaAmount}/>\r\n                <CardFrameSelection setCardFrame={props.setCardFrame}/>\r\n                <SpellDescription setSpellDescription={props.setSpellDescription} spellDescription={props.spellDescription} \r\n                                  setSpellFontSize={props.setSpellFontSize} spellFontSize={props.spellFontSize}/>\r\n                <FlavorText setFlavorText={props.setFlavorText} setFlavorTextFontSize={props.setFlavorTextFontSize} flavorTextFontSize={props.flavorTextFontSize}/>\r\n                <PowerToughness setPower={props.setPower} setToughness={props.setToughness} setPTFontSize={props.setPTFontSize} ptFontSize={props.ptFontSize}/>\r\n                <ImageSelector setImageFileFunction={props.setImageFileFunction} selectedImageFileName={props.selectedImageFileName} \r\n                                setImageCentering={props.setImageCentering}/>\r\n                <DownloadCardButton left={330} takeCardScreenshot={props.takeCardScreenshot}/>\r\n                <img src={toImg(mana, \"zefzef\")} alt={'Screenshot'} />\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}