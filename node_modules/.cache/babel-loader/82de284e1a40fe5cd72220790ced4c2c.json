{"ast":null,"code":"import _objectSpread from\"C:/Visual Studio Projects/card-generator-tanguy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{Select as ChakraSelect}from\"@chakra-ui/react\";/***************************************************************/import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export function Select(props){var setValue=props.setValue;var options=props.options;var optionItems=options.map(function(option){return/*#__PURE__*/_jsx(\"option\",{value:option,children:option});});var handleInputChange=function handleInputChange(e){var inputValue=e.target.value;setValue(inputValue);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(ChakraSelect,_objectSpread(_objectSpread({onChange:handleInputChange},props),{},{children:optionItems}))});}","map":{"version":3,"sources":["C:/Visual Studio Projects/card-generator-tanguy/src/style_components/select.jsx"],"names":["React","Select","ChakraSelect","props","setValue","options","optionItems","map","option","handleInputChange","e","inputValue","target","value"],"mappings":"qKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAM,GAAIC,CAAAA,YAAnB,KAAuC,kBAAvC,CACA,iE,gGAEA,MAAO,SAASD,CAAAA,MAAT,CAAgBE,KAAhB,CAAuB,CAC1B,GAAIC,CAAAA,QAAQ,CAAGD,KAAK,CAACC,QAArB,CAEA,GAAMC,CAAAA,OAAO,CAAGF,KAAK,CAACE,OAAtB,CACA,GAAMC,CAAAA,WAAW,CAAGD,OAAO,CAACE,GAAR,CAAY,SAACC,MAAD,qBAAY,eAAQ,KAAK,CAAEA,MAAf,UAAwBA,MAAxB,EAAZ,EAAZ,CAApB,CAEA,GAAIC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,CAAD,CAAO,CAC3B,GAAIC,CAAAA,UAAU,CAAGD,CAAC,CAACE,MAAF,CAASC,KAA1B,CACAT,QAAQ,CAACO,UAAD,CAAR,CACD,CAHH,CAKA,mBACA,sCACE,KAAC,YAAD,8BAAc,QAAQ,CAAEF,iBAAxB,EAA+CN,KAA/C,eACKG,WADL,GADF,EADA,CAOH","sourcesContent":["import React from 'react';\r\nimport { Select as ChakraSelect}  from \"@chakra-ui/react\"\r\n/***************************************************************/\r\n\r\nexport function Select(props) {\r\n    let setValue = props.setValue\r\n\r\n    const options = props.options\r\n    const optionItems = options.map((option) => <option value={option}>{option}</option>);\r\n\r\n    let handleInputChange = (e) => {\r\n        let inputValue = e.target.value\r\n        setValue(inputValue)\r\n      }\r\n\r\n    return (\r\n    <>\r\n      <ChakraSelect onChange={handleInputChange} {...props}> \r\n          {optionItems}\r\n      </ChakraSelect>\r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}