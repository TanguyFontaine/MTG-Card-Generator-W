{"ast":null,"code":"var _jsxFileName = \"C:\\\\Visual Studio Projects\\\\card-generator-tanguy\\\\src\\\\components\\\\card_image_panel.jsx\";\nimport React from 'react';\nimport { Image, Box, HStack } from \"@chakra-ui/react\";\n/***************************************************************/\n\nimport { Text } from \"../style_components/text\";\n/***************************************************************/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CardImagePanel(props) {\n  const name = props.cardName;\n  const imageFileContent = props.imageFile.content;\n  const imageFileName = props.imageFile.name;\n  const types = props.types;\n  const superTypes = props.superTypes;\n  const subTypes = props.subTypes;\n  const chosenCardFrame = props.cardFrame;\n  const spellDescription = props.spellDescription;\n  const flavorText = props.flavorText;\n  const power = props.power;\n  const toughness = props.toughness;\n  const loyalty = props.loyalty;\n  const typesItems = types.map(type => /*#__PURE__*/_jsxDEV(Text, {\n    children: type\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 44\n  }, this));\n  const superTypesItems = superTypes.map(superTypes => /*#__PURE__*/_jsxDEV(Text, {\n    children: superTypes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 60\n  }, this));\n\n  let checkFileExtension = event => {\n    const athorizedFileExtensions = [\"png\", \"jpeg\", \"jpg\", \"webp\"];\n    const file = event.target;\n    let fileName = file.alt; // why is the name empty ??\n\n    const splitFileName = fileName.split('.');\n\n    if (splitFileName.length != 2 || !(splitFileName[1].toLowerCase() in athorizedFileExtensions)) {\n      fileName = \"error\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    bg: \"blue.800\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: [\"Card name : \", name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: \"types :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }, this), typesItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: \"super types :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }, this), superTypesItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: [\"Sub types : \", subTypes, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: [\"Card frame : \", chosenCardFrame, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: [\"Abilities : \", spellDescription, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: [\"Flavor text : \", flavorText, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: [\"Power : \", power, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: [\"Toughness : \", toughness, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: [\"Loyalty : \", loyalty, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Image, {\n      alt: imageFileName,\n      src: imageFileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_c = CardImagePanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardImagePanel\");","map":{"version":3,"sources":["C:/Visual Studio Projects/card-generator-tanguy/src/components/card_image_panel.jsx"],"names":["React","Image","Box","HStack","Text","CardImagePanel","props","name","cardName","imageFileContent","imageFile","content","imageFileName","types","superTypes","subTypes","chosenCardFrame","cardFrame","spellDescription","flavorText","power","toughness","loyalty","typesItems","map","type","superTypesItems","checkFileExtension","event","athorizedFileExtensions","file","target","fileName","alt","splitFileName","split","length","toLowerCase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,MAArB,QAAmC,kBAAnC;AACA;;AAEA,SAASC,IAAT,QAAqB,0BAArB;AAEA;;;AACA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAElC,QAAMC,IAAI,GAAGD,KAAK,CAACE,QAAnB;AACA,QAAMC,gBAAgB,GAAGH,KAAK,CAACI,SAAN,CAAgBC,OAAzC;AACA,QAAMC,aAAa,GAAGN,KAAK,CAACI,SAAN,CAAgBH,IAAtC;AACA,QAAMM,KAAK,GAAGP,KAAK,CAACO,KAApB;AACA,QAAMC,UAAU,GAAGR,KAAK,CAACQ,UAAzB;AACA,QAAMC,QAAQ,GAAGT,KAAK,CAACS,QAAvB;AACA,QAAMC,eAAe,GAAGV,KAAK,CAACW,SAA9B;AACA,QAAMC,gBAAgB,GAAGZ,KAAK,CAACY,gBAA/B;AACA,QAAMC,UAAU,GAAGb,KAAK,CAACa,UAAzB;AACA,QAAMC,KAAK,GAAGd,KAAK,CAACc,KAApB;AACA,QAAMC,SAAS,GAAGf,KAAK,CAACe,SAAxB;AACA,QAAMC,OAAO,GAAGhB,KAAK,CAACgB,OAAtB;AAEA,QAAMC,UAAU,GAAGV,KAAK,CAACW,GAAN,CAAWC,IAAD,iBAAU,QAAC,IAAD;AAAA,cAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,UAApB,CAAnB;AACA,QAAMC,eAAe,GAAGZ,UAAU,CAACU,GAAX,CAAgBV,UAAD,iBAAgB,QAAC,IAAD;AAAA,cAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,UAA/B,CAAxB;;AAEA,MAAIa,kBAAkB,GAAIC,KAAD,IAAW;AAEhC,UAAMC,uBAAuB,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,MAAvB,CAAhC;AAEA,UAAMC,IAAI,GAAGF,KAAK,CAACG,MAAnB;AACA,QAAIC,QAAQ,GAAGF,IAAI,CAACG,GAApB,CALgC,CAKR;;AACxB,UAAMC,aAAa,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,CAAtB;;AACA,QAAID,aAAa,CAACE,MAAd,IAAwB,CAAxB,IAA6B,EAAEF,aAAa,CAAC,CAAD,CAAb,CAAiBG,WAAjB,MAAkCR,uBAApC,CAAjC,EAA+F;AAC3FG,MAAAA,QAAQ,GAAG,OAAX;AACH;AACF,GAVH;;AAYA,sBACI,QAAC,GAAD;AAAK,IAAA,EAAE,EAAC,UAAR;AAAA,4BACI,QAAC,IAAD;AAAA,iCAAmBzB,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,CAAjB;AAAA,8BAAoB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAApB,EAAyCgB,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,CAAjB;AAAA,8BAAoB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAApB,EAA+CG,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,IAAD;AAAA,iCAAmBX,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,IAAD;AAAA,kCAAoBC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,IAAD;AAAA,iCAAmBE,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,IAAD;AAAA,mCAAqBC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI,QAAC,IAAD;AAAA,6BAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI,QAAC,IAAD;AAAA,iCAAmBC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,IAAD;AAAA,+BAAiBC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI,QAAC,KAAD;AAAO,MAAA,GAAG,EAAEV,aAAZ;AAA2B,MAAA,GAAG,EAAEH;AAAhC;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;KA7CeJ,c","sourcesContent":["import React from 'react';\r\nimport { Image, Box, HStack } from \"@chakra-ui/react\"\r\n/***************************************************************/\r\n\r\nimport { Text } from \"../style_components/text\"\r\n\r\n/***************************************************************/\r\nexport function CardImagePanel(props) {\r\n\r\n    const name = props.cardName\r\n    const imageFileContent = props.imageFile.content\r\n    const imageFileName = props.imageFile.name\r\n    const types = props.types\r\n    const superTypes = props.superTypes\r\n    const subTypes = props.subTypes\r\n    const chosenCardFrame = props.cardFrame\r\n    const spellDescription = props.spellDescription\r\n    const flavorText = props.flavorText\r\n    const power = props.power\r\n    const toughness = props.toughness\r\n    const loyalty = props.loyalty\r\n\r\n    const typesItems = types.map((type) => <Text>{type}</Text>);\r\n    const superTypesItems = superTypes.map((superTypes) => <Text>{superTypes}</Text>);\r\n\r\n    let checkFileExtension = (event) => {\r\n\r\n        const athorizedFileExtensions = [\"png\", \"jpeg\", \"jpg\", \"webp\"]\r\n\r\n        const file = event.target\r\n        let fileName = file.alt // why is the name empty ??\r\n        const splitFileName = fileName.split('.')\r\n        if (splitFileName.length != 2 || !(splitFileName[1].toLowerCase() in athorizedFileExtensions)) {\r\n            fileName = \"error\"\r\n        }\r\n      }\r\n\r\n    return (\r\n        <Box bg=\"blue.800\">\r\n            <Text>Card name : {name} </Text>\r\n            <HStack spacing={2}><Text>types :</Text>{typesItems}</HStack>\r\n            <HStack spacing={2}><Text>super types :</Text>{superTypesItems}</HStack>\r\n            <Text>Sub types : {subTypes} </Text>\r\n            <Text>Card frame : {chosenCardFrame} </Text>\r\n            <Text>Abilities : {spellDescription} </Text>\r\n            <Text>Flavor text : {flavorText} </Text>\r\n            <Text>Power : {power} </Text>\r\n            <Text>Toughness : {toughness} </Text>\r\n            <Text>Loyalty : {loyalty} </Text>\r\n            <Image alt={imageFileName} src={imageFileContent}></Image>\r\n        </Box>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}