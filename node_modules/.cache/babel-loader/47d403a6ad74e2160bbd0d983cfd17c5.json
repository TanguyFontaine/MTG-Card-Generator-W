{"ast":null,"code":"var _jsxFileName = \"C:\\\\Visual Studio Projects\\\\card-generator-tanguy\\\\src\\\\style_components\\\\textarea.jsx\";\nimport React, { useState } from 'react';\nimport { Textarea as ChakraTextarea, Text } from \"@chakra-ui/react\";\n/***************************************************************/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Textarea(props) {\n  let setValue = props.setValue;\n\n  let handleInputChange = e => {\n    let inputValue = e.target.value;\n    setValue(inputValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ChakraTextarea, {\n      whiteSpace: \"pre-line\",\n      onChange: handleInputChange,\n      size: \"sm\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Textarea;\n\nvar _c;\n\n$RefreshReg$(_c, \"Textarea\");","map":{"version":3,"sources":["C:/Visual Studio Projects/card-generator-tanguy/src/style_components/textarea.jsx"],"names":["React","useState","Textarea","ChakraTextarea","Text","props","setValue","handleInputChange","e","inputValue","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAQ,IAAIC,cAArB,EAAqCC,IAArC,QAAiD,kBAAjD;AAEA;;;;AACA,OAAO,SAASF,QAAT,CAAkBG,KAAlB,EAAyB;AAC5B,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;;AAEA,MAAIC,iBAAiB,GAAIC,CAAD,IAAO;AAC7B,QAAIC,UAAU,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA1B;AACAL,IAAAA,QAAQ,CAACG,UAAD,CAAR;AACD,GAHD;;AAKA,sBACA;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,UAAU,EAAC,UAA3B;AACE,MAAA,QAAQ,EAAEF,iBADZ;AAEE,MAAA,IAAI,EAAC,IAFP;AAAA,SAGMF;AAHN;AAAA;AAAA;AAAA;AAAA;AADF,mBADA;AASH;KAjBeH,Q","sourcesContent":["import React, { useState } from 'react';\r\nimport { Textarea as ChakraTextarea, Text}  from \"@chakra-ui/react\"\r\n\r\n/***************************************************************/\r\nexport function Textarea(props) {\r\n    let setValue = props.setValue\r\n\r\n    let handleInputChange = (e) => {\r\n      let inputValue = e.target.value\r\n      setValue(inputValue)\r\n    }\r\n\r\n    return (\r\n    <>\r\n      <ChakraTextarea whiteSpace=\"pre-line\"\r\n        onChange={handleInputChange}\r\n        size=\"sm\"\r\n        {...props}\r\n      />\r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}