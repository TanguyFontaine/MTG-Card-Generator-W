{"ast":null,"code":"import _slicedToArray from\"C:/Visual Studio Projects/card-generator-tanguy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';// 1. import `ChakraProvider` component to have chakra work correctly\nimport{ChakraProvider}from\"@chakra-ui/react\";import{SimpleGrid,Box,useControllableState}from\"@chakra-ui/react\";import\"@fontsource/eb-garamond/400.css\";import\"@fontsource/eb-garamond/500.css\";import\"@fontsource/eb-garamond/600.css\";import\"@fontsource/eb-garamond/700.css\";import\"@fontsource/eb-garamond/800.css\";import\"@saeris/typeface-beleren-bold\";import\"mana-font\";/***************************************************************/import theme from\"./theme\";import{UiPanel}from\"./components/ui_panel\";import{CardImagePanel}from\"./components/card_image_panel\";/***************************************************************/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CardGenerator(){var _useState=useState({name:\"\",content:\"\"}),_useState2=_slicedToArray(_useState,2),imageFile=_useState2[0],setImageFile=_useState2[1];var _useState3=useState(\"center\"),_useState4=_slicedToArray(_useState3,2),imageCentering=_useState4[0],setImageCentering=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),cardName=_useState6[0],setCardName=_useState6[1];var _useControllableState=useControllableState({defaultValue:32}),_useControllableState2=_slicedToArray(_useControllableState,2),nameFontSize=_useControllableState2[0],setNameFontSize=_useControllableState2[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),types=_useState8[0],setTypes=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),superTypes=_useState10[0],setSuperTypes=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),subTypes=_useState12[0],setSubTypes=_useState12[1];var _useControllableState3=useControllableState({defaultValue:28}),_useControllableState4=_slicedToArray(_useControllableState3,2),typesFontSize=_useControllableState4[0],setTypesFontSize=_useControllableState4[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),cardFrameColor=_useState14[0],setCardFrame=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),manaCost=_useState16[0],setManaCost=_useState16[1];// Easier to handle colorless mana on its own. Begin at -1 to display 0 mana artifacts\nvar _useState17=useState(-1),_useState18=_slicedToArray(_useState17,2),colorlessManaAmount=_useState18[0],setColorlessManaAmount=_useState18[1];var _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),spellDescription=_useState20[0],setSpellDescription=_useState20[1];var _useControllableState5=useControllableState({defaultValue:22}),_useControllableState6=_slicedToArray(_useControllableState5,2),spellFontSize=_useControllableState6[0],setSpellFontSize=_useControllableState6[1];var _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),flavorText=_useState22[0],setFlavorText=_useState22[1];var _useControllableState7=useControllableState({defaultValue:21}),_useControllableState8=_slicedToArray(_useControllableState7,2),flavorTextFontSize=_useControllableState8[0],setFlavorTextFontSize=_useControllableState8[1];var _useState23=useState(\"\"),_useState24=_slicedToArray(_useState23,2),power=_useState24[0],setPower=_useState24[1];var _useState25=useState(\"\"),_useState26=_slicedToArray(_useState25,2),toughness=_useState26[0],setToughness=_useState26[1];var _useControllableState9=useControllableState({defaultValue:34}),_useControllableState10=_slicedToArray(_useControllableState9,2),ptFontSize=_useControllableState10[0],setPTFontSize=_useControllableState10[1];// clean planeswalker ?\nvar _useState27=useState(\"\"),_useState28=_slicedToArray(_useState27,2),loyalty=_useState28[0],setLoyalty=_useState28[1];return/*#__PURE__*/_jsx(ChakraProvider,{theme:theme,children:/*#__PURE__*/_jsxs(Box,{display:{md:'flex'},columns:2,h:\"100vh\",w:\"100%\",children:[/*#__PURE__*/_jsx(UiPanel,{setCardName:setCardName,nameFontSize:nameFontSize,setNameFontSize:setNameFontSize,setImageFileFunction:setImageFile,selectedImageFileName:imageFile.name,setTypes:setTypes,setSuperTypes:setSuperTypes,setTypesFontSize:setTypesFontSize,typesFontSize:typesFontSize,setSubTypes:setSubTypes,setManaCost:setManaCost,manaCost:manaCost,setColorlessManaAmount:setColorlessManaAmount,colorlessManaAmount:colorlessManaAmount,setCardFrame:setCardFrame,setSpellDescription:setSpellDescription,setSpellFontSize:setSpellFontSize,spellFontSize:spellFontSize,setFlavorText:setFlavorText,setFlavorTextFontSize:setFlavorTextFontSize,flavorTextFontSize:flavorTextFontSize,setPower:setPower,setToughness:setToughness,setPTFontSize:setPTFontSize,ptFontSize:ptFontSize,setLoyalty:setLoyalty,setImageCentering:setImageCentering}),/*#__PURE__*/_jsx(CardImagePanel,{imageFile:imageFile,cardName:cardName,nameFontSize:nameFontSize,types:types,superTypes:superTypes,subTypes:subTypes,typesFontSize:typesFontSize,manaCost:manaCost,colorlessManaAmount:colorlessManaAmount,cardFrameColor:cardFrameColor,spellDescription:spellDescription,spellFontSize:spellFontSize,flavorText:flavorText,flavorTextFontSize:flavorTextFontSize,power:power,toughness:toughness,ptFontSize:ptFontSize,loyalty:loyalty,imageCentering:imageCentering})]})});}export{CardGenerator};","map":{"version":3,"sources":["C:/Visual Studio Projects/card-generator-tanguy/src/CardGenerator.jsx"],"names":["React","useState","ChakraProvider","SimpleGrid","Box","useControllableState","theme","UiPanel","CardImagePanel","CardGenerator","name","content","imageFile","setImageFile","imageCentering","setImageCentering","cardName","setCardName","defaultValue","nameFontSize","setNameFontSize","types","setTypes","superTypes","setSuperTypes","subTypes","setSubTypes","typesFontSize","setTypesFontSize","cardFrameColor","setCardFrame","manaCost","setManaCost","colorlessManaAmount","setColorlessManaAmount","spellDescription","setSpellDescription","spellFontSize","setSpellFontSize","flavorText","setFlavorText","flavorTextFontSize","setFlavorTextFontSize","power","setPower","toughness","setToughness","ptFontSize","setPTFontSize","loyalty","setLoyalty","md"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n// 1. import `ChakraProvider` component to have chakra work correctly\r\nimport { ChakraProvider } from \"@chakra-ui/react\"\r\nimport { SimpleGrid, Box, useControllableState } from \"@chakra-ui/react\"\r\n\r\nimport \"@fontsource/eb-garamond/400.css\"\r\nimport \"@fontsource/eb-garamond/500.css\"\r\nimport \"@fontsource/eb-garamond/600.css\"\r\nimport \"@fontsource/eb-garamond/700.css\"\r\nimport \"@fontsource/eb-garamond/800.css\"\r\nimport \"@saeris/typeface-beleren-bold\"\r\nimport \"mana-font\"\r\n\r\n/***************************************************************/\r\n\r\nimport theme from \"./theme\"\r\nimport { UiPanel } from \"./components/ui_panel\"\r\nimport { CardImagePanel } from \"./components/card_image_panel\"\r\n\r\n/***************************************************************/\r\nfunction CardGenerator() {\r\n\r\n    const [imageFile, setImageFile] = useState({\r\n        name: \"\",\r\n        content: \"\"\r\n    })\r\n    const [imageCentering, setImageCentering] = useState(\"center\") \r\n\r\n    const [cardName, setCardName] = useState(\"\")\r\n    const [nameFontSize, setNameFontSize] = useControllableState({ defaultValue: 32 })\r\n\r\n    const [types, setTypes] = useState([])\r\n    const [superTypes, setSuperTypes] = useState([])\r\n    const [subTypes, setSubTypes] = useState(\"\")\r\n    const [typesFontSize, setTypesFontSize] = useControllableState({ defaultValue: 28 })\r\n\r\n    const [cardFrameColor, setCardFrame] = useState(\"\")\r\n\r\n    const [manaCost, setManaCost] = useState([])\r\n    // Easier to handle colorless mana on its own. Begin at -1 to display 0 mana artifacts\r\n    const [colorlessManaAmount, setColorlessManaAmount] = useState(-1)\r\n\r\n    const [spellDescription, setSpellDescription] = useState(\"\")\r\n    const [spellFontSize, setSpellFontSize] = useControllableState({ defaultValue: 22 })\r\n\r\n    const [flavorText, setFlavorText] = useState(\"\")\r\n    const [flavorTextFontSize, setFlavorTextFontSize] = useControllableState({ defaultValue: 21 })\r\n\r\n    const [power, setPower] = useState(\"\")\r\n    const [toughness, setToughness] = useState(\"\")\r\n    const [ptFontSize, setPTFontSize] = useControllableState({ defaultValue: 34 })\r\n\r\n    // clean planeswalker ?\r\n    const [loyalty, setLoyalty] = useState(\"\")\r\n\r\n    return (\r\n        <ChakraProvider theme={theme} >\r\n            <Box display={{ md: 'flex' }} columns={2} h=\"100vh\" w=\"100%\">\r\n                <UiPanel setCardName={setCardName} nameFontSize={nameFontSize} setNameFontSize={setNameFontSize}\r\n                         setImageFileFunction={setImageFile} selectedImageFileName={imageFile.name}\r\n                         setTypes={setTypes}\r\n                         setSuperTypes={setSuperTypes} setTypesFontSize={setTypesFontSize} typesFontSize={typesFontSize}\r\n                         setSubTypes={setSubTypes}\r\n                         setManaCost={setManaCost} manaCost={manaCost}\r\n                         setColorlessManaAmount={setColorlessManaAmount} colorlessManaAmount={colorlessManaAmount}\r\n                         setCardFrame={setCardFrame}\r\n                         setSpellDescription={setSpellDescription} setSpellFontSize={setSpellFontSize} spellFontSize={spellFontSize}\r\n                         setFlavorText={setFlavorText} setFlavorTextFontSize={setFlavorTextFontSize} flavorTextFontSize={flavorTextFontSize}\r\n                         setPower={setPower} setToughness={setToughness} setPTFontSize={setPTFontSize} ptFontSize={ptFontSize}\r\n                         setLoyalty={setLoyalty}\r\n                         setImageCentering={setImageCentering}/>\r\n                <CardImagePanel \r\n                         imageFile={imageFile} \r\n                         cardName={cardName} nameFontSize={nameFontSize}\r\n                         types={types} \r\n                         superTypes={superTypes} \r\n                         subTypes={subTypes} typesFontSize={typesFontSize}\r\n                         manaCost={manaCost}\r\n                         colorlessManaAmount={colorlessManaAmount}\r\n                         cardFrameColor={cardFrameColor} \r\n                         spellDescription={spellDescription} spellFontSize={spellFontSize}\r\n                         flavorText={flavorText} flavorTextFontSize={flavorTextFontSize}\r\n                         power={power} toughness={toughness} ptFontSize={ptFontSize}\r\n                         loyalty={loyalty}\r\n                         imageCentering={imageCentering}/>\r\n            </Box>\r\n        </ChakraProvider>\r\n    );\r\n}\r\n\r\nexport { CardGenerator };"]},"metadata":{},"sourceType":"module"}