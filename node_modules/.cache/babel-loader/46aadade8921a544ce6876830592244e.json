{"ast":null,"code":"var _jsxFileName = \"C:\\\\Visual Studio Projects\\\\card-generator-tanguy\\\\src\\\\components\\\\card_image_panel.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box, useStyleConfig } from \"@chakra-ui/react\";\n/***************************************************************/\n\nimport { ImageBox } from \"./image_box\";\n/***************************************************************/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction fileExtensionIsValid(imageFileName) {\n  if (!isDefined(imageFileName)) {\n    return true;\n  }\n\n  const athorizedFileExtensions = [\"png\", \"jpeg\", \"jpg\", \"gif\", \"webp\"];\n  const splitFileName = imageFileName.split('.');\n  return athorizedFileExtensions.some(ext => ext === splitFileName[splitFileName.length - 1].toLowerCase());\n}\n\nfunction DisplayImage(props) {\n  const imageFileName = props.imageFileName;\n  const imageFileContent = props.imageFileContent;\n  const imageCentering = props.imageCentering; // Do not display the error panel while an image has not been selected\n\n  if (imageFileName === \"\" || fileExtensionIsValid(imageFileName)) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      height: \"416px\",\n      width: \"566px\",\n      position: \"absolute\",\n      top: \"10.82%\",\n      left: \"62.38%\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        boxSize: \"inherit\",\n        objectPosition: imageCentering,\n        objectFit: \"cover\",\n        alt: imageFileName,\n        src: imageFileContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Text, {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"63%\",\n    fontSize: 24,\n    width: \"28%\",\n    color: \"white\",\n    noOfLines: 2,\n    children: [\"Invalid image file, supported extensions are :\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), \"png, jpg, jpeg, gif, webp\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_c = DisplayImage;\n\nfunction retrieveCorrespondingFrameImage(frameColor, cardPower, cardToughness) {\n  // to retieve the frame with the power/toughness box or the frame without\n  let frameIndex = 0;\n\n  if (cardPower !== \"\" || cardToughness !== \"\") {\n    frameIndex = 1;\n  } // By default take the colorless frame\n\n\n  let frameImage = frames[\"Colorless\"][frameIndex];\n\n  if (isDefined(frameColor) && frameColor !== \"\") {\n    frameImage = frames[frameColor][frameIndex];\n  }\n\n  return frameImage;\n} // Take the spell descrition in param. It is a string whith the descritpion and encoded symbols\n// example : [Tap] : add [g]\n// returns a list of SymbolEments and Strings to be displayed\n\n\nfunction transformIntoElements(spellDescription) {\n  if (!isDefined(spellDescription)) {\n    return [];\n  }\n\n  let displayableElements = [];\n  const leftBraceSplit = spellDescription.split('[');\n\n  for (let i = 0; i < leftBraceSplit.length; i++) {\n    const rightBraceSplit = leftBraceSplit[i].split(']');\n\n    if (rightBraceSplit.length === 2) {\n      // a symbol has been parsed, it is the left side of the ], the right is the rest of the description\n      const symbolCode = rightBraceSplit[0];\n      const displayableSymbol = symbolCode === \"e\" ? /*#__PURE__*/_jsxDEV(Symbol, {\n        symbolOnly: true,\n        symbol: symbolCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 62\n      }, this) : /*#__PURE__*/_jsxDEV(Symbol, {\n        \"font-s\": true,\n        ize: \"small\",\n        symbol: symbolCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 112\n      }, this);\n      displayableElements = displayableElements.concat(displayableSymbol);\n      displayableElements = displayableElements.concat(rightBraceSplit[1]);\n    } else {\n      displayableElements = displayableElements.concat(rightBraceSplit);\n    }\n  }\n\n  return displayableElements;\n}\n\nexport const CardImagePanel = /*#__PURE__*/React.forwardRef(_c2 = _s((props, ref) => {\n  _s();\n\n  const name = props.cardName;\n  const nameFontSize = props.nameFontSize;\n  const imageFileContent = props.imageFile.content;\n  const imageFileName = props.imageFile.name;\n  const imageCentering = props.imageCentering;\n  const types = props.types;\n  const superTypes = props.superTypes;\n  const subTypes = props.subTypes;\n  const typesFontSize = props.typesFontSize;\n  const manaCost = props.manaCost;\n  const colorlessManaAmount = props.colorlessManaAmount;\n  const spellDescription = props.spellDescription;\n  const spellFontSize = props.spellFontSize;\n  const flavorText = props.flavorText;\n  const flavorTextFontSize = props.flavorTextFontSize;\n  const power = props.power;\n  const toughness = props.toughness;\n  const ptFontSize = props.ptFontSize;\n  const selectedCardFrame = props.cardFrameColor;\n  const typesItems = types.map(type => /*#__PURE__*/_jsxDEV(Text, {\n    children: type\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 44\n  }, this));\n  const superTypesItems = superTypes.map(superTypes => /*#__PURE__*/_jsxDEV(Text, {\n    children: superTypes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 60\n  }, this));\n  const displayableManaCost = manaCost.map(symbol => /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Symbol, {\n      symbol: symbol,\n      shadow: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 63\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 58\n  }, this));\n  manaCostLength = manaCost.length;\n\n  if (isDefined(power)) {\n    powerLength = power.length;\n  }\n\n  if (isDefined(toughness)) {\n    toughnessLength = toughness.length;\n  } // Formulas to display values at the rigths position \n  //the mana cost at the right place\n  // 96.8 is hard coded pos of the 1st mana symbol, 2.48 is the size of mana symbol with fontSize(35) \n  // we do not forget the colorless mana that is not the mana cost list\n\n\n  const manaCostLeftPos = 92 - (manaCostLength + (colorlessManaAmount > -1 ? 1 : 0)) * 1.76 + \"%\"; // adjust the power toughness position depending on the length of both values and the font size\n\n  const powerLeftPos = 89.2 - (powerLength + toughnessLength) / (68 / ptFontSize) + \"%\";\n  const powerTopPos = 89 + (3.4 - ptFontSize * 0.1) + \"%\"; // adjust the name height pos depending on the font size \n  // result = baseTopValue + ((defaultFontSize / 10) - (fontSize / 10))\n\n  const nameTopPos = 4.8 + (3.2 - nameFontSize * 0.1) + \"%\";\n  const typesTopPos = 56.7 + (2.8 - typesFontSize * 0.1) + \"%\";\n  const spellDescriptionLineHeight = 1.44 + (spellFontSize * 0.1 - 2.2) + \"em\";\n  const flavorTextLineHeight = 1.34 + (flavorTextFontSize * 0.1 - 2.1) + \"em\";\n  const displayableSpellDescription = transformIntoElements(spellDescription);\n  const style = useStyleConfig(\"CardImagePanel\");\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: ref,\n    __css: style,\n    sx: {\n      wordSpacing: \"0.2em\"\n    },\n    bg: \"blue.800\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        position: \"absolute\",\n        left: \"1152\",\n        height: \"937px\",\n        width: \"656px\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          boxSize: \"inherit\",\n          objectFit: \"fit\",\n          src: retrieveCorrespondingFrameImage(selectedCardFrame, power, toughness)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        pos: \"absolute\",\n        top: nameTopPos,\n        left: \"62.5%\",\n        fontSize: nameFontSize,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        name: \"manaCost\",\n        pos: \"absolute\",\n        top: \"5.1%\",\n        left: manaCostLeftPos,\n        fontSize: 24,\n        children: /*#__PURE__*/_jsxDEV(HStack, {\n          spacing: 1,\n          children: [colorlessManaAmount > -1 ? /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Symbol, {\n              symbol: colorlessManaAmount,\n              shadow: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 53\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 119\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 1,\n            children: displayableManaCost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        fontSize: typesFontSize,\n        pos: \"absolute\",\n        top: typesTopPos,\n        left: \"62.5%\",\n        spacing: \"0.3em\",\n        children: [superTypesItems, typesItems, /*#__PURE__*/_jsxDEV(Text, {\n          children: subTypes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        boxSize: \"44px\",\n        pos: \"absolute\",\n        top: \"56.2%\",\n        left: \"89.7%\",\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        lineHeight: spellDescriptionLineHeight,\n        sx: {\n          wordSpacing: \"0.2em\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: spellFontSize,\n          whiteSpace: \"pre-line\",\n          fontFamily: \"EB Garamond\",\n          fontWeight: 400,\n          pos: \"absolute\",\n          top: \"63.5%\",\n          left: \"63%\",\n          width: \"28.5%\",\n          children: displayableSpellDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        fontSize: ptFontSize,\n        pos: \"absolute\",\n        top: powerTopPos,\n        left: powerLeftPos,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [power, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), power !== \"\" || toughness !== \"\" ? /*#__PURE__*/_jsxDEV(Text, {\n          children: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 57\n        }, this) : /*#__PURE__*/_jsxDEV(Text, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 74\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [toughness, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        lineHeight: flavorTextLineHeight,\n        sx: {\n          wordSpacing: \"0.2em\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          as: \"i\",\n          fontSize: flavorTextFontSize,\n          whiteSpace: \"pre-line\",\n          fontFamily: \"EB Garamond\",\n          fontWeight: 400,\n          pos: \"absolute\",\n          top: \"76%\",\n          left: \"63%\",\n          width: \"28.5%\",\n          children: flavorText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DisplayImage, {\n        imageFileName: imageFileName,\n        imageFileContent: imageFileContent,\n        imageCentering: imageCentering\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}, \"pl7GAhqelQYC2Y8gxFE2LPD7C/o=\", false, function () {\n  return [useStyleConfig];\n}));\n_c3 = CardImagePanel;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DisplayImage\");\n$RefreshReg$(_c2, \"CardImagePanel$React.forwardRef\");\n$RefreshReg$(_c3, \"CardImagePanel\");","map":{"version":3,"sources":["C:/Visual Studio Projects/card-generator-tanguy/src/components/card_image_panel.jsx"],"names":["React","Box","useStyleConfig","ImageBox","fileExtensionIsValid","imageFileName","isDefined","athorizedFileExtensions","splitFileName","split","some","ext","length","toLowerCase","DisplayImage","props","imageFileContent","imageCentering","retrieveCorrespondingFrameImage","frameColor","cardPower","cardToughness","frameIndex","frameImage","frames","transformIntoElements","spellDescription","displayableElements","leftBraceSplit","i","rightBraceSplit","symbolCode","displayableSymbol","concat","CardImagePanel","forwardRef","ref","name","cardName","nameFontSize","imageFile","content","types","superTypes","subTypes","typesFontSize","manaCost","colorlessManaAmount","spellFontSize","flavorText","flavorTextFontSize","power","toughness","ptFontSize","selectedCardFrame","cardFrameColor","typesItems","map","type","superTypesItems","displayableManaCost","symbol","manaCostLength","powerLength","toughnessLength","manaCostLeftPos","powerLeftPos","powerTopPos","nameTopPos","typesTopPos","spellDescriptionLineHeight","flavorTextLineHeight","displayableSpellDescription","style","wordSpacing","logo"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Box, useStyleConfig} from \"@chakra-ui/react\"\r\n/***************************************************************/\r\n\r\nimport { ImageBox } from \"./image_box\"\r\n/***************************************************************/\r\nfunction fileExtensionIsValid(imageFileName) {\r\n    if (!isDefined(imageFileName)) {return true}\r\n\r\n    const athorizedFileExtensions = [\"png\", \"jpeg\", \"jpg\", \"gif\", \"webp\"]\r\n\r\n    const splitFileName = imageFileName.split('.')\r\n    return (athorizedFileExtensions.some(ext =>(ext === splitFileName[splitFileName.length - 1].toLowerCase())));\r\n}\r\n\r\nfunction DisplayImage(props) {\r\n    const imageFileName = props.imageFileName\r\n    const imageFileContent = props.imageFileContent\r\n    const imageCentering = props.imageCentering\r\n    \r\n    // Do not display the error panel while an image has not been selected\r\n    if (imageFileName === \"\" || fileExtensionIsValid(imageFileName)) {\r\n        return (\r\n            <Box height=\"416px\" width=\"566px\" position=\"absolute\" top=\"10.82%\" left=\"62.38%\">\r\n                <Image boxSize=\"inherit\" objectPosition={imageCentering} objectFit=\"cover\" alt={imageFileName} src={imageFileContent}></Image>\r\n            </Box>\r\n        );\r\n    }\r\n    return (\r\n        <Text position=\"absolute\" top=\"40%\" left=\"63%\" fontSize={24} width=\"28%\" color=\"white\" noOfLines={2}>\r\n            Invalid image file, supported extensions are : \r\n            <br />\r\n            png, jpg, jpeg, gif, webp\r\n        </Text>\r\n    );\r\n}\r\n\r\nfunction retrieveCorrespondingFrameImage(frameColor, cardPower, cardToughness) {\r\n    // to retieve the frame with the power/toughness box or the frame without\r\n    let frameIndex = 0\r\n    if (cardPower !== \"\" || cardToughness !== \"\") {\r\n        frameIndex = 1\r\n    }\r\n    \r\n    // By default take the colorless frame\r\n    let frameImage = frames[\"Colorless\"][frameIndex]\r\n\r\n    if (isDefined(frameColor) && frameColor !== \"\") {\r\n        frameImage = frames[frameColor][frameIndex]\r\n    }\r\n\r\n    return frameImage\r\n}\r\n\r\n// Take the spell descrition in param. It is a string whith the descritpion and encoded symbols\r\n// example : [Tap] : add [g]\r\n// returns a list of SymbolEments and Strings to be displayed\r\nfunction transformIntoElements(spellDescription) {\r\n    if (!isDefined(spellDescription)) {return []}\r\n\r\n    let displayableElements = []\r\n    \r\n    const leftBraceSplit = spellDescription.split('[');\r\n    for\t(let i = 0; i < leftBraceSplit.length; i++)\r\n    {\r\n        const rightBraceSplit = leftBraceSplit[i].split(']')\r\n        \r\n        if (rightBraceSplit.length === 2) {\r\n            // a symbol has been parsed, it is the left side of the ], the right is the rest of the description\r\n            const symbolCode = rightBraceSplit[0]\r\n            const displayableSymbol = (symbolCode === \"e\") ? <Symbol symbolOnly={true} symbol={symbolCode}/> : <Symbol font-s   ize=\"small\" symbol={symbolCode}/>\r\n            displayableElements = displayableElements.concat(displayableSymbol)\r\n            displayableElements = displayableElements.concat(rightBraceSplit[1])\r\n        }\r\n        else {\r\n            displayableElements = displayableElements.concat(rightBraceSplit)\r\n        }\r\n    }\r\n\r\n    return (displayableElements);\r\n}\r\n\r\nexport const CardImagePanel = React.forwardRef((props, ref) => {\r\n    const name = props.cardName\r\n    const nameFontSize = props.nameFontSize\r\n    const imageFileContent = props.imageFile.content\r\n    const imageFileName = props.imageFile.name\r\n    const imageCentering = props.imageCentering\r\n    const types = props.types\r\n    const superTypes = props.superTypes\r\n    const subTypes = props.subTypes\r\n    const typesFontSize = props.typesFontSize\r\n    const manaCost = props.manaCost\r\n    const colorlessManaAmount = props.colorlessManaAmount\r\n    const spellDescription = props.spellDescription\r\n    const spellFontSize = props.spellFontSize\r\n    const flavorText = props.flavorText\r\n    const flavorTextFontSize = props.flavorTextFontSize\r\n    const power = props.power\r\n    const toughness = props.toughness\r\n    const ptFontSize  = props.ptFontSize\r\n    const selectedCardFrame = props.cardFrameColor\r\n\r\n    const typesItems = types.map((type) => <Text>{type}</Text>);\r\n    const superTypesItems = superTypes.map((superTypes) => <Text>{superTypes}</Text>);\r\n    const displayableManaCost = manaCost.map((symbol) => <Box><Symbol symbol={symbol} shadow={true}/></Box>);\r\n    manaCostLength = manaCost.length\r\n    \r\n    if (isDefined(power)) {powerLength = power.length}\r\n    if (isDefined(toughness)) {toughnessLength = toughness.length}\r\n\r\n    // Formulas to display values at the rigths position \r\n    \r\n    //the mana cost at the right place\r\n    // 96.8 is hard coded pos of the 1st mana symbol, 2.48 is the size of mana symbol with fontSize(35) \r\n    // we do not forget the colorless mana that is not the mana cost list\r\n    const manaCostLeftPos = 92 - (manaCostLength + (colorlessManaAmount > -1 ? 1 : 0)) * 1.76 + \"%\"\r\n\r\n    // adjust the power toughness position depending on the length of both values and the font size\r\n    const powerLeftPos = 89.2 - ((powerLength + toughnessLength) / (68 / ptFontSize)) + \"%\"\r\n    const powerTopPos = 89 + (3.4 - ptFontSize * 0.1) + \"%\"\r\n\r\n    // adjust the name height pos depending on the font size \r\n    // result = baseTopValue + ((defaultFontSize / 10) - (fontSize / 10))\r\n    const nameTopPos = 4.8 + (3.2 - nameFontSize * 0.1) + \"%\"\r\n    const typesTopPos = 56.7 + (2.8 - typesFontSize * 0.1) + \"%\"\r\n    const spellDescriptionLineHeight = 1.44 + (spellFontSize * 0.1 - 2.2) + \"em\"\r\n    const flavorTextLineHeight = 1.34 + (flavorTextFontSize * 0.1 - 2.1) + \"em\"\r\n\r\n    const displayableSpellDescription = transformIntoElements(spellDescription)\r\n\r\n    const style = useStyleConfig(\"CardImagePanel\")\r\n\r\n    return (\r\n        <Box ref={ref} __css={style} sx={{wordSpacing: \"0.2em\"}} bg=\"blue.800\">\r\n            <Box>\r\n                <Box position=\"absolute\" left=\"1152\" height=\"937px\" width=\"656px\">\r\n                    <Image boxSize=\"inherit\" objectFit=\"fit\" src={retrieveCorrespondingFrameImage(selectedCardFrame, power, toughness)}/>\r\n                </Box>\r\n                <Text pos=\"absolute\" top={nameTopPos} left=\"62.5%\" fontSize={nameFontSize}>{name}</Text>\r\n\r\n                <Box name=\"manaCost\" pos=\"absolute\" top=\"5.1%\" left={manaCostLeftPos} fontSize={24}>\r\n                    <HStack spacing={1}>\r\n                        {colorlessManaAmount > -1 ? <Box><Symbol symbol={colorlessManaAmount} shadow={true}/></Box> : <Box />}\r\n                        <HStack spacing={1}> \r\n                            {displayableManaCost}\r\n                        </HStack>\r\n                    </HStack>\r\n                </Box>\r\n\r\n                <HStack fontSize={typesFontSize} pos=\"absolute\" top={typesTopPos} left=\"62.5%\" spacing=\"0.3em\">\r\n                    {superTypesItems}\r\n                    {typesItems}\r\n                    <Text>{subTypes}</Text>\r\n                </HStack>\r\n                <Image boxSize=\"44px\" pos=\"absolute\" top=\"56.2%\" left=\"89.7%\" src={logo}/>\r\n                \r\n                <Box lineHeight={spellDescriptionLineHeight} sx={{wordSpacing: \"0.2em\"}}>\r\n                    <Text fontSize={spellFontSize} whiteSpace=\"pre-line\" fontFamily=\"EB Garamond\" fontWeight={400} pos=\"absolute\" top=\"63.5%\" left=\"63%\" width=\"28.5%\" >{displayableSpellDescription}</Text>\r\n                </Box>   \r\n\r\n                <HStack fontSize={ptFontSize} pos=\"absolute\" top={powerTopPos} left={powerLeftPos} spacing={1}>\r\n                    <Text>{power} </Text>\r\n                    {power !== \"\" || toughness !== \"\" ? <Text>/</Text> : <Text/>}\r\n                    <Text>{toughness} </Text>\r\n                </HStack>\r\n\r\n                <Box lineHeight={flavorTextLineHeight} sx={{wordSpacing: \"0.2em\"}}>\r\n                    <Text as=\"i\" fontSize={flavorTextFontSize} whiteSpace=\"pre-line\" fontFamily=\"EB Garamond\" fontWeight={400} pos=\"absolute\" top=\"76%\" left=\"63%\" width=\"28.5%\" >{flavorText}</Text>\r\n                </Box>   \r\n\r\n                <DisplayImage imageFileName={imageFileName} imageFileContent={imageFileContent} imageCentering={imageCentering}></DisplayImage>\r\n            </Box>\r\n        </Box>\r\n    );\r\n})\r\n"]},"metadata":{},"sourceType":"module"}