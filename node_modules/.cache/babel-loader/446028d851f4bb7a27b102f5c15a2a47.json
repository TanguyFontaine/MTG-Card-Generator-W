{"ast":null,"code":"var _jsxFileName = \"C:\\\\Visual Studio Projects\\\\card-generator-tanguy\\\\src\\\\components\\\\card_image_panel.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Image, Box, HStack, useStyleConfig, Flex } from \"@chakra-ui/react\";\nimport { isDefined } from '@chakra-ui/utils';\n/***************************************************************/\n\nimport { Text } from \"../style_components/text\";\nimport { frames } from \"../ressources/frames\";\nimport { ManaSymbol } from \"./mana_symbol\";\n/***************************************************************/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction fileExtensionIsValid(imageFileName) {\n  const athorizedFileExtensions = [\"png\", \"jpeg\", \"jpg\", \"gif\", \"webp\"];\n  const splitFileName = imageFileName.split('.');\n  return athorizedFileExtensions.some(ext => ext === splitFileName[splitFileName.length - 1].toLowerCase());\n}\n\nfunction DisplayImage(props) {\n  const imageFileName = props.imageFileName;\n  const imageFileContent = props.imageFileContent; // Do not display the error panel while an image has not been selected\n\n  if (imageFileName === \"\" || fileExtensionIsValid(imageFileName)) {\n    return /*#__PURE__*/_jsxDEV(Image, {\n      alt: imageFileName,\n      src: imageFileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Invalid image file : supported extensions are png, jpg, jpeg, gif, webp\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this);\n}\n\n_c = DisplayImage;\n\nfunction retrieveCorrespondingFrameImage(frameColor, cardPower, cardToughness) {\n  // to retieve the frame with the power/toughness box or the frame without\n  let frameIndex = 0;\n\n  if (cardPower !== \"\" || cardToughness !== \"\") {\n    frameIndex = 1;\n  } // By default take the =olorless frame\n\n\n  let frameImage = frames[\"Colorless\"][frameIndex];\n\n  if (isDefined(frameColor) && frameColor !== \"\") {\n    frameImage = frames[frameColor][frameIndex];\n  }\n\n  return frameImage;\n}\n\nexport function CardImagePanel(props) {\n  _s();\n\n  const name = props.cardName;\n  const imageFileContent = props.imageFile.content;\n  const imageFileName = props.imageFile.name;\n  const types = props.types;\n  const superTypes = props.superTypes;\n  const subTypes = props.subTypes;\n  const manaCost = props.manaCost;\n  const colorlessManaAmount = props.colorlessManaAmount;\n  const spellDescription = props.spellDescription;\n  const flavorText = props.flavorText;\n  const power = props.power;\n  const toughness = props.toughness;\n  const loyalty = props.loyalty;\n  const selectedCardFrame = props.cardFrameColor;\n  const typesItems = types.map(type => /*#__PURE__*/_jsxDEV(Text, {\n    children: type\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 44\n  }, this));\n  const superTypesItems = superTypes.map(superTypes => /*#__PURE__*/_jsxDEV(Text, {\n    children: superTypes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 60\n  }, this));\n  const displayableManaCost = manaCost.map(symbol => /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(ManaSymbol, {\n      symbol: symbol,\n      shadow: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 63\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 58\n  }, this)); // Formula to display the mana cost at the right place\n  // 96.8 is hard coded pos of the 1st mana symbol, 2.48 is the size of mana symbol with fontSize(35) \n  // we do not forget the colorless mana that is not the mana cost list\n\n  const manaCostLeftPos = 96.5 - (manaCost.length + (colorlessManaAmount > 0 ? 1 : 0)) * 2.48 + \"%\";\n  const style = useStyleConfig(\"CardImagePanel\");\n  return /*#__PURE__*/_jsxDEV(Box, {\n    __css: style,\n    bg: \"blue.800\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      name: \"cardFrame\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        mt: 3,\n        ml: 3,\n        src: retrieveCorrespondingFrameImage(selectedCardFrame, power, toughness)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        pos: \"absolute\",\n        top: \"8.7%\",\n        left: \"54.5%\",\n        fontSize: 38,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        name: \"manaCost\",\n        pos: \"absolute\",\n        top: \"8.5%\",\n        left: manaCostLeftPos,\n        fontSize: 35,\n        children: /*#__PURE__*/_jsxDEV(HStack, {\n          spacing: 1,\n          children: [colorlessManaAmount > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(ManaSymbol, {\n              symbol: colorlessManaAmount,\n              shadow: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 52\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 122\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 1,\n            children: displayableManaCost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        fontSize: 30,\n        pos: \"absolute\",\n        top: \"30%\",\n        left: \"54.5%\",\n        spacing: 2,\n        children: [superTypesItems, typesItems, subTypes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      name: \"other information\",\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: \"types :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), typesItems]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: \"super types :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), superTypesItems]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Sub types : \", subTypes, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Card frame : \", selectedCardFrame, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Abilities : \", spellDescription, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Flavor text : \", flavorText, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Power : \", power, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Toughness : \", toughness, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Loyalty : \", loyalty, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DisplayImage, {\n        imageFileName: imageFileName,\n        imageFileContent: imageFileContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardImagePanel, \"pl7GAhqelQYC2Y8gxFE2LPD7C/o=\", false, function () {\n  return [useStyleConfig];\n});\n\n_c2 = CardImagePanel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DisplayImage\");\n$RefreshReg$(_c2, \"CardImagePanel\");","map":{"version":3,"sources":["C:/Visual Studio Projects/card-generator-tanguy/src/components/card_image_panel.jsx"],"names":["React","Image","Box","HStack","useStyleConfig","Flex","isDefined","Text","frames","ManaSymbol","fileExtensionIsValid","imageFileName","athorizedFileExtensions","splitFileName","split","some","ext","length","toLowerCase","DisplayImage","props","imageFileContent","retrieveCorrespondingFrameImage","frameColor","cardPower","cardToughness","frameIndex","frameImage","CardImagePanel","name","cardName","imageFile","content","types","superTypes","subTypes","manaCost","colorlessManaAmount","spellDescription","flavorText","power","toughness","loyalty","selectedCardFrame","cardFrameColor","typesItems","map","type","superTypesItems","displayableManaCost","symbol","manaCostLeftPos","style"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Image, Box, HStack, useStyleConfig, Flex } from \"@chakra-ui/react\"\r\nimport { isDefined } from '@chakra-ui/utils';\r\n/***************************************************************/\r\n\r\nimport { Text } from \"../style_components/text\"\r\nimport { frames } from \"../ressources/frames\"\r\nimport { ManaSymbol } from \"./mana_symbol\"\r\n\r\n/***************************************************************/\r\n\r\nfunction fileExtensionIsValid(imageFileName) {\r\n\r\n    const athorizedFileExtensions = [\"png\", \"jpeg\", \"jpg\", \"gif\", \"webp\"]\r\n\r\n    const splitFileName = imageFileName.split('.')\r\n    return (athorizedFileExtensions.some(ext =>(ext === splitFileName[splitFileName.length - 1].toLowerCase())));\r\n}\r\n\r\nfunction DisplayImage(props) {\r\n    const imageFileName = props.imageFileName\r\n    const imageFileContent = props.imageFileContent\r\n\r\n    // Do not display the error panel while an image has not been selected\r\n    if (imageFileName === \"\" || fileExtensionIsValid(imageFileName)) {\r\n        return (\r\n            <Image alt={imageFileName} src={imageFileContent}></Image>\r\n        );\r\n    }\r\n    return (<div>Invalid image file : supported extensions are png, jpg, jpeg, gif, webp</div>);\r\n}\r\n\r\nfunction retrieveCorrespondingFrameImage(frameColor, cardPower, cardToughness) {\r\n    // to retieve the frame with the power/toughness box or the frame without\r\n    let frameIndex = 0\r\n    if (cardPower !== \"\" || cardToughness !== \"\") {\r\n        frameIndex = 1\r\n    }\r\n    \r\n    // By default take the =olorless frame\r\n    let frameImage = frames[\"Colorless\"][frameIndex]\r\n\r\n    if (isDefined(frameColor) && frameColor !== \"\") {\r\n        frameImage = frames[frameColor][frameIndex]\r\n    }\r\n\r\n    return frameImage\r\n}\r\n\r\nexport function CardImagePanel(props) {\r\n\r\n    const name = props.cardName\r\n    const imageFileContent = props.imageFile.content\r\n    const imageFileName = props.imageFile.name\r\n    const types = props.types\r\n    const superTypes = props.superTypes\r\n    const subTypes = props.subTypes\r\n    const manaCost = props.manaCost\r\n    const colorlessManaAmount = props.colorlessManaAmount\r\n    const spellDescription = props.spellDescription\r\n    const flavorText = props.flavorText\r\n    const power = props.power\r\n    const toughness = props.toughness\r\n    const loyalty = props.loyalty\r\n    const selectedCardFrame = props.cardFrameColor\r\n\r\n    const typesItems = types.map((type) => <Text>{type}</Text>);\r\n    const superTypesItems = superTypes.map((superTypes) => <Text>{superTypes}</Text>);\r\n\r\n    const displayableManaCost = manaCost.map((symbol) => <Box><ManaSymbol symbol={symbol} shadow={true}/></Box>);\r\n\r\n    // Formula to display the mana cost at the right place\r\n    // 96.8 is hard coded pos of the 1st mana symbol, 2.48 is the size of mana symbol with fontSize(35) \r\n    // we do not forget the colorless mana that is not the mana cost list\r\n    const manaCostLeftPos = 96.5 - (manaCost.length + (colorlessManaAmount > 0 ? 1 : 0)) * 2.48 + \"%\"\r\n\r\n    const style = useStyleConfig(\"CardImagePanel\")\r\n\r\n    return (\r\n        <Box __css={style} bg=\"blue.800\">\r\n            <Box name=\"cardFrame\">\r\n                <Image mt={3} ml={3} src={retrieveCorrespondingFrameImage(selectedCardFrame, power, toughness)}/>\r\n                <Text pos=\"absolute\" top=\"8.7%\" left=\"54.5%\" fontSize={38}>{name}</Text>\r\n                <Box name=\"manaCost\" pos=\"absolute\" top=\"8.5%\" left={manaCostLeftPos} fontSize={35}>\r\n                    <HStack spacing={1}>\r\n                        {colorlessManaAmount > 0 ? <Box><ManaSymbol symbol={colorlessManaAmount} shadow={true}/></Box> : <Box />}\r\n                        <HStack spacing={1}> \r\n                            {displayableManaCost}\r\n                        </HStack>\r\n                    </HStack>\r\n                </Box>\r\n                <HStack fontSize={30} pos=\"absolute\" top=\"30%\" left=\"54.5%\" spacing={2}>\r\n                    {superTypesItems}\r\n                    {typesItems}\r\n                    {subTypes}\r\n                </HStack>\r\n            </Box>\r\n            <Box name=\"other information\">\r\n                <HStack spacing={2}>\r\n                    <Text>types :</Text>\r\n                    {typesItems}\r\n                </HStack>\r\n                <HStack spacing={2}>\r\n                    <Text>super types :</Text>\r\n                    {superTypesItems}\r\n                </HStack>\r\n                <Text>Sub types : {subTypes} </Text>\r\n\r\n                <Text>Card frame : {selectedCardFrame} </Text>\r\n                <Text>Abilities : {spellDescription} </Text>\r\n                <Text>Flavor text : {flavorText} </Text>\r\n                <Text>Power : {power} </Text>\r\n                <Text>Toughness : {toughness} </Text>\r\n                <Text>Loyalty : {loyalty} </Text>\r\n                <DisplayImage imageFileName={imageFileName} imageFileContent={imageFileContent}></DisplayImage>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}