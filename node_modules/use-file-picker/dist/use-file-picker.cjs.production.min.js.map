{"version":3,"file":"use-file-picker.cjs.production.min.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/validators/fileSizeValidator/index.ts","../src/constants/bytesPerMegabyte.ts","../src/validators/filesLimitValidator/index.ts","../src/validators/imageDimensionsValidator/index.ts","../src/useFilePicker.tsx","../src/helpers/openFileDialog.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { FileWithPath } from 'file-selector';\r\nimport { BYTES_PER_MEGABYTE } from '../../constants/bytesPerMegabyte';\r\nimport { UseFilePickerConfig } from '../../interfaces';\r\nimport { Validator } from '../validatorInterface';\r\n\r\nexport default class FileSizeValidator implements Validator {\r\n  validateBeforeParsing(config: UseFilePickerConfig, plainFiles: File[]): Promise<void> {\r\n    const { minFileSize, maxFileSize } = config;\r\n    for (const file of plainFiles) {\r\n      if (minFileSize || maxFileSize) {\r\n        return checkFileSize({ minFileSize, maxFileSize, fileSize: file.size });\r\n      }\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n  async validateAfterParsing(_config: UseFilePickerConfig, _file: FileWithPath): Promise<void> {\r\n    return Promise.resolve();\r\n  }\r\n}\r\n\r\nconst checkFileSize = ({ fileSize, maxFileSize, minFileSize }: { minFileSize: number | undefined; maxFileSize: number | undefined; fileSize: number }) =>\r\n  new Promise<void>((resolve, reject) => {\r\n    if (minFileSize) {\r\n      const minBytes = minFileSize * BYTES_PER_MEGABYTE;\r\n      if (fileSize < minBytes) {\r\n        reject({ fileSizeTooSmall: true });\r\n      }\r\n    }\r\n    if (maxFileSize) {\r\n      const maxBytes = maxFileSize * BYTES_PER_MEGABYTE;\r\n      if (fileSize > maxBytes) {\r\n        reject({ fileSizeToolarge: true });\r\n      }\r\n    }\r\n    resolve();\r\n  });\r\n","export const BYTES_PER_MEGABYTE = 1000000;\r\n","import { UseFilePickerConfig } from '../../interfaces';\r\nimport { Validator } from '../validatorInterface';\r\n\r\nexport default class FilesLimitValidator implements Validator {\r\n  validateBeforeParsing(config: UseFilePickerConfig, plainFiles: File[]): Promise<void> {\r\n    const { limitFilesConfig } = config;\r\n    if (limitFilesConfig) {\r\n      if (limitFilesConfig.max && plainFiles.length > limitFilesConfig.max) {\r\n        return Promise.reject({ maxLimitExceeded: true });\r\n      }\r\n\r\n      if (limitFilesConfig.min && plainFiles.length < limitFilesConfig.min) {\r\n        return Promise.reject({ minLimitNotReached: true });\r\n      }\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n  validateAfterParsing(): Promise<void> {\r\n    return Promise.resolve();\r\n  }\r\n}\r\n","import { FileWithPath } from 'file-selector';\r\nimport { ImageDimensionError, ImageDims, UseFilePickerConfig } from '../../interfaces';\r\nimport { Validator } from '../validatorInterface';\r\n\r\nexport default class ImageDimensionsValidator implements Validator {\r\n  validateBeforeParsing(): Promise<void> {\r\n    return Promise.resolve();\r\n  }\r\n  validateAfterParsing(config: UseFilePickerConfig, file: FileWithPath, reader: FileReader): Promise<void> {\r\n    const { readAs, imageSizeRestrictions } = config;\r\n    if (readAs === 'DataURL' && imageSizeRestrictions && isImage(file.type)) {\r\n      return checkImageDimensions(reader.result as string, imageSizeRestrictions);\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n}\r\n\r\nconst isImage = (fileType: string) => fileType.startsWith('image');\r\n\r\nconst checkImageDimensions = (imgDataURL: string, imageSizeRestrictions: ImageDims) =>\r\n  new Promise<void>((resolve, reject) => {\r\n    const img = new Image();\r\n    img.onload = function() {\r\n      const { maxHeight, maxWidth, minHeight, minWidth } = imageSizeRestrictions;\r\n      const { width, height } = (this as unknown) as typeof img;\r\n      let errors: ImageDimensionError = {};\r\n      if (maxHeight && maxHeight < height) errors = { ...errors, imageHeightTooBig: true };\r\n      if (minHeight && minHeight > height) errors = { ...errors, imageHeightTooSmall: true };\r\n      if (maxWidth && maxWidth < width) errors = { ...errors, imageWidthTooBig: true };\r\n      if (minWidth && minWidth > width) errors = { ...errors, imageWidthTooSmall: true };\r\n      Object.keys(errors).length ? reject(errors) : resolve();\r\n    };\r\n    img.onerror = function() {\r\n      reject({ imageNotLoaded: true } as ImageDimensionError);\r\n    };\r\n    img.src = imgDataURL;\r\n  });\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { fromEvent, FileWithPath } from 'file-selector';\r\nimport { UseFilePickerConfig, FileContent, FilePickerReturnTypes, FileError, ReaderMethod } from './interfaces';\r\nimport FileSizeValidator from './validators/fileSizeValidator';\r\nimport FilesLimitValidator from './validators/filesLimitValidator';\r\nimport { Validator } from './validators/validatorInterface';\r\nimport { openFileDialog } from './helpers/openFileDialog';\r\nimport ImageDimensionsValidator from './validators/imageDimensionsValidator';\r\n\r\nconst VALIDATORS: Validator[] = [new FileSizeValidator(), new FilesLimitValidator(), new ImageDimensionsValidator()];\r\n\r\nfunction useFilePicker({\r\n  accept = '*',\r\n  multiple = true,\r\n  readAs = 'Text',\r\n  minFileSize,\r\n  maxFileSize,\r\n  imageSizeRestrictions,\r\n  limitFilesConfig,\r\n  readFilesContent = true,\r\n  validators = [],\r\n}: UseFilePickerConfig): FilePickerReturnTypes {\r\n  const [files, setFiles] = useState<FileWithPath[]>([]);\r\n  const [filesContent, setFilesContent] = useState<FileContent[]>([]);\r\n  const [fileErrors, setFileErrors] = useState<FileError[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [plainFiles, setPlainFiles] = useState<File[]>([]);\r\n  const plainFileObjectsRef = useRef<File[]>([]);\r\n\r\n  const openFileSelector = () => {\r\n    const fileExtensions = accept instanceof Array ? accept.join(',') : accept;\r\n    openFileDialog(fileExtensions, multiple, evt => {\r\n      clear();\r\n      const inputElement = evt.target as HTMLInputElement;\r\n      plainFileObjectsRef.current = inputElement.files ? Array.from(inputElement.files) : [];\r\n      const validations = VALIDATORS.concat(validators).map(validator =>\r\n        validator\r\n          .validateBeforeParsing(\r\n            {\r\n              accept,\r\n              multiple,\r\n              readAs,\r\n              minFileSize,\r\n              maxFileSize,\r\n              imageSizeRestrictions,\r\n              limitFilesConfig,\r\n              readFilesContent,\r\n            },\r\n            plainFileObjectsRef.current\r\n          )\r\n          .catch(err => Promise.reject(setFileErrors(f => [{ ...err, ...f }])))\r\n      );\r\n\r\n      Promise.all(validations).then(() => {\r\n        if (!readFilesContent) {\r\n          setPlainFiles(plainFileObjectsRef.current);\r\n          return;\r\n        }\r\n        fromEvent(evt).then(files => {\r\n          setFiles(files as FileWithPath[]);\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  const clear = (): void => {\r\n    setPlainFiles([]);\r\n    setFiles([]);\r\n    setFilesContent([]);\r\n    setFileErrors([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (files.length === 0) {\r\n      setFilesContent([]);\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const fileParsingPromises = files.map(\r\n      (file: FileWithPath) =>\r\n        new Promise(async (resolve: (fileContent: FileContent) => void, reject: (reason: FileError) => void) => {\r\n          const reader = new FileReader();\r\n\r\n          //availible reader methods: readAsText, readAsBinaryString, readAsArrayBuffer, readAsDataURL\r\n          const readStrategy = reader[`readAs${readAs}` as ReaderMethod] as typeof reader.readAsText;\r\n          readStrategy.call(reader, file);\r\n\r\n          const addError = ({ name = file.name, ...others }: FileError) => {\r\n            reject({ name, fileSizeToolarge: false, fileSizeTooSmall: false, ...others });\r\n          };\r\n\r\n          reader.onload = async () => {\r\n            const validations = VALIDATORS.concat(validators).map(validator =>\r\n              validator\r\n                .validateAfterParsing(\r\n                  {\r\n                    accept,\r\n                    multiple,\r\n                    readAs,\r\n                    minFileSize,\r\n                    maxFileSize,\r\n                    imageSizeRestrictions,\r\n                    limitFilesConfig,\r\n                    readFilesContent,\r\n                  },\r\n                  file,\r\n                  reader\r\n                )\r\n                .catch(err => Promise.reject(addError(err)))\r\n            );\r\n\r\n            Promise.all(validations).then(() =>\r\n              resolve({\r\n                content: reader.result as string,\r\n                name: file.name,\r\n                lastModified: file.lastModified,\r\n              } as FileContent)\r\n            );\r\n          };\r\n\r\n          reader.onerror = () => {\r\n            addError({ readerError: reader.error });\r\n          };\r\n        })\r\n    );\r\n    Promise.all(fileParsingPromises)\r\n      .then((fileContent: FileContent[]) => {\r\n        setFilesContent(fileContent);\r\n        setPlainFiles(plainFileObjectsRef.current);\r\n        setFileErrors([]);\r\n      })\r\n      .catch(err => {\r\n        setFileErrors(f => [err, ...f]);\r\n      })\r\n      .finally(() => setLoading(false));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [files]);\r\n\r\n  return [openFileSelector, { filesContent, errors: fileErrors, loading, plainFiles, clear }];\r\n}\r\n\r\nexport default useFilePicker;\r\n","export function openFileDialog(accept: string, multiple: boolean, callback: (arg: Event) => void) {\r\n  // this function must be called from a user\r\n  // activation event (ie an onclick event)\r\n\r\n  // Create an input element\r\n  var inputElement = document.createElement('input');\r\n  // Set its type to file\r\n  inputElement.type = 'file';\r\n  // Set accept to the file types you want the user to select.\r\n  // Include both the file extension and the mime type\r\n  inputElement.accept = accept;\r\n  // Accept multiple files\r\n  inputElement.multiple = multiple;\r\n  // set onchange event to call callback when user has selected file\r\n  inputElement.addEventListener('change', callback);\r\n  // set onblur event to call callback when user has selected file on Safari\r\n  inputElement.addEventListener('blur', callback);\r\n  // dispatch a click event to open the file dialog\r\n  inputElement.dispatchEvent(new MouseEvent('click'));\r\n}\r\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","FileSizeValidator","validateBeforeParsing","config","plainFiles","minFileSize","maxFileSize","checkFileSize","fileSize","size","validateAfterParsing","_config","_file","fileSizeTooSmall","fileSizeToolarge","FilesLimitValidator","limitFilesConfig","max","maxLimitExceeded","min","minLimitNotReached","ImageDimensionsValidator","file","reader","imageSizeRestrictions","readAs","isImage","checkImageDimensions","fileType","startsWith","imgDataURL","img","Image","onload","maxHeight","maxWidth","minHeight","minWidth","width","height","errors","imageHeightTooBig","imageHeightTooSmall","imageWidthTooBig","imageWidthTooSmall","onerror","imageNotLoaded","src","VALIDATORS","accept","multiple","readFilesContent","validators","useState","files","setFiles","filesContent","setFilesContent","fileErrors","setFileErrors","loading","setLoading","setPlainFiles","plainFileObjectsRef","useRef","clear","useEffect","fileParsingPromises","map","FileReader","addError","others","validations","concat","validator","all","content","lastModified","readerError","fileContent","current","f","callback","inputElement","document","createElement","addEventListener","dispatchEvent","MouseEvent","openFileDialog","Array","join","evt","target","from","fromEvent"],"mappings":"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"}